name: Publish Modpacks

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

jobs:
  publish-modpacks:
    name: Build
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    env:
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Install packwiz
        run: nix profile install nixpkgs#packwiz

      - name: Export Modpacks
        run: |
          # Move to the packwiz configuration root
          cd packwiz

          # Platform specific exports
          packwiz modrinth export --output "../Starforged4-1.20.1-modrinth.zip"
          packwiz curseforge export --output "../Starforged4-1.20.1-curseforge.zip"

      - name: Extract Configurations
        run: |
          MODRINTH_ZIP="Starforged4-1.20.1-curseforge.zip"

          # extract the specified directories
          unzip "$MODRINTH_ZIP" -d ./

          # Re-archive mods and configurations as a standalone
          # arhive. We can't isolate those two directories with
          # the `unzip` command for some obscure reason
          zip -r "Starforged4-1.20.1-generic.zip" overrides/mods overrides/config

      - name: Get current date
        id: get-date
        # output format: 2023-12-30-234559
        run: echo "date=$(date +'%Y-%m-%d-%H%M%S')" >> "${GITHUB_OUTPUT}"

      - name: Packs-release-{{ github.sha }}
        uses: softprops/action-gh-release@v2
        with:
          ame: "Starforged4 Modpacks (Rev: ${{ steps.get-date.outputs.date }})"
          tag_name: "${{ steps.get-date.outputs.date }}"
          files: |
            Starforged4-1.20.1-modrinth.zip
            Starforged4-1.20.1-curseforge.zip
            Starforged4-1.20.1-generic.zip
          body: |
            # Automatic Modpack Releases

            - Built on: ${{ steps.get-date.outputs.date }}
            - Revision: ${{ github.sha }}

            This automated workflow will generate the modpack archives for **Modrinth** and **Curseforge**
            modpack formats. If you use a launcher capable of importing those modpack formats, you may
            consider downloading the appropriate modpack archive.

            For users without compatible launchers, or for those that want a more hands-on approach to
            their mod management, a "generic" archive is generated. The generic pack will contain ONLY
            the `mods` and `config` directories, leaving the installation to your own hands.
